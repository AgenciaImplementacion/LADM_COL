INTERLIS 2.3;

/** ISO 19152 LADM country profile COL Core Model.
 * 
 * -----------------------------------------------------------
 * 
 * LADM es un modelo conceptual de la realidad que concreta una ontología y establece una semántica para la administración del territorio.
 * 
 * -----------------------------------------------------------
 *  revision history
 * -----------------------------------------------------------
 * 
 *  30.01.2018/fm : Cambio del tipo de dato del atributo Ext_Direccion de la clase Unidad Espacial a ExtDireccion; atributo ext_PID de la calse LA_Interesado cambia de OID a ExtInteresado; Cambio de cardinalidad en relacion miembros entre LA_Interesado y LA_Agrupacion_Interesados de 0..1 a 0..*
 *  07.02.2018/fm-gc: Ajuste al tipo de dato de la unidad Peso, pasa a tener precision 1 para evitar ser tratado cmo atributo entero y aumentar su tamaño
 *  19.02.2018/fm-gc: ampliación del dominio al tipo de dato Peso
 *  26.02.2018/fm-lj: cambio del nombre del dominio ISO19125_Type a ISO19125_Tipo
 *  19.04.2018/vb fm: Ajuste al constraint Fraccion, denominador mayor a 0
 *  19.04.2018/vb fm: Cambio en la cardinalidad del atributo u_Local_Id de la clase LA_BAUnit de 0..1 a 1
 * 17.07.2018/fm : se incluye escritura en dominio COL_FuenteAdministrativaTipo
 * 10.08.2018/fm : Se eliminan los atributos ai_local_id y ai_espacio_de_nombres de la clase LA_Agrupacion_Interesados
 * 27.08.2018/fm : Ajuste a la cardinalidad de asociacion puntoFuente de 1..* a 0..*
 * 25.09.2018/at: Se ajusta la longitud del atributo Codigo_Registral_Transaccion en la clase COL_FuenteAdministrativa a 5 caracteres de acuerdo a la Resolución 3973 de 2018
 * -----------------------------------------------------------
 * 
 *  (c) IGAC y SNR con apoyo de la Cooperacion Suiza
 * 
 * -----------------------------------------------------------
 */
MODEL LADM_COL_V1_2 (es)
AT "http://www.proadmintierra.info/"
VERSION "V1.2.0"  // 2019-08-13 // =
  IMPORTS ISO19107_PLANAS_V1;

  UNIT

    PesoColombiano [COP] EXTENDS INTERLIS.MONEY;

    Area (ABSTRACT) = (INTERLIS.LENGTH * INTERLIS.LENGTH);

    MetroCuadrado [m2] EXTENDS Area = (INTERLIS.m * INTERLIS.m);

    Centrimetro [cm] = 1 / 100 [INTERLIS.m];

  TOPIC LADM_Nucleo(ABSTRACT) =

    DOMAIN

      CharacterString = TEXT*255;

      COL_AreaTipo = (
        !!@ ili2db.dispName = "Área calculada artura local"
        Area_Calculada_Altura_Local,
        !!@ ili2db.dispName = "Área calculada altura mar"
        Area_Calculada_Altura_Mar,
        !!@ ili2db.dispName = "Área catastral administrativa"
        Area_Catastral_Administrativa,
        !!@ ili2db.dispName = "Área estimado construcción"
        Area_Estimado_Construccion,
        !!@ ili2db.dispName = "Área no oficial"
        Area_No_Oficial,
        !!@ ili2db.dispName = "Área registral"
        Area_Registral
      );

      COL_BAUnitTipo = (
        !!@ ili2db.dispName = "Unidad propiedad básica"
        Unidad_Propiedad_Basica,
        !!@ ili2db.dispName = "Unidad derecho"
        Unidad_Derecho,
        !!@ ili2db.dispName = "Otro"
        Otro
      );

      COL_ContenidoNivelTipo = (
        !!@ ili2db.dispName = "Construcción convencional"
        Construccion_Convencional,
        !!@ ili2db.dispName = "Construcción no convencional"
        Construccion_No_Convencional,
        !!@ ili2db.dispName = "Consuetudinario"
        Consuetudinario,
        !!@ ili2db.dispName = "Formal"
        Formal,
        !!@ ili2db.dispName = "Informal"
        Informal,
        !!@ ili2db.dispName = "Responsabilidad"
        Responsabilidad,
        !!@ ili2db.dispName = "Restricción derecho público"
        Restriccion_Derecho_Publico,
        !!@ ili2db.dispName = "Restricción derecho privado"
        Restriccion_Derecho_Privado
      );

      COL_DimensionTipo = (
        !!@ ili2db.dispName = "Dimensión 2D"
        Dim2D,
        !!@ ili2db.dispName = "Dimensión 3D"
        Dim3D,
        !!@ ili2db.dispName = "Otro"
        Otro
      );

      COL_EstadoRedServiciosTipo = (
        !!@ ili2db.dispName = "Planeado"
        Planeado,
        !!@ ili2db.dispName = "En uso"
        En_Uso,
        !!@ ili2db.dispName = "Fuera de servicio"
        Fuera_De_Servicio,
        !!@ ili2db.dispName = "Otro"
        Otro
      );

      COL_EstructuraTipo = (
        !!@ ili2db.dispName = "Croquis"
        Croquis,
        !!@ ili2db.dispName = "Línea no estructurada"
        Linea_no_Estructurada,
        !!@ ili2db.dispName = "Texto"
        Texto,
        !!@ ili2db.dispName = "Topológico"
        Topologico
      );

      COL_FuenteEspacialTipo = (
        !!@ ili2db.dispName = "Croquis de campo"
        Croquis_Campo,
        !!@ ili2db.dispName = "Protócolo de posicionamiento"
        Protocolo_Posicionamiento,
        !!@ ili2db.dispName = "Informe de cálculo"
        Informe_Calculo,
        !!@ ili2db.dispName = "Datos crudos"
        Datos_Crudos
      );

      COL_FuncionInteresadoTipo = (
        !!@ ili2db.dispName = "Abogado demandas"
        Abogado_Demandas,
        !!@ ili2db.dispName = "Administrador del estado"
        Administrador_Estado,
        !!@ ili2db.dispName = "Banco"
        Banco,
        !!@ ili2db.dispName = "Ciudadano"
        Ciudadano,
        !!@ ili2db.dispName = "Juez"
        Juez,
        !!@ ili2db.dispName = "Notario"
        Notario,
        !!@ ili2db.dispName = "Reconocedor o agrimensor"
        Reconocedor_Agrimensor
      );

      COL_GrupoInteresadoTipo = (
        !!@ ili2db.dispName = "Grupo civil"
        Grupo_Civil,
        !!@ ili2db.dispName = "Grupo empresarial"
        Grupo_Empresarial,
        !!@ ili2db.dispName = "Grupo étnico"
        Grupo_Etnico,
        !!@ ili2db.dispName = "Grupo mixto"
        Grupo_Mixto
      );

      /** Si ha sido situado por interpolación, de qué manera se ha hecho.
       */
      COL_InterpolacionTipo = (
        !!@ ili2db.dispName = "Aislado"
        Aislado,
        !!@ ili2db.dispName = "Intermedio arco"
        Intermedio_Arco,
        !!@ ili2db.dispName = "Intermedio línea"
        Intermedio_Linea
      );

      COL_MetodoProduccionTipo = (
        !!@ ili2db.dispName = "Método directo"
        Metodo_Directo,
        !!@ ili2db.dispName = "Método indirecto"
        Metodo_Indirecto
      );

      COL_PuntoTipo = (
        !!@ ili2db.dispName = "Control"
        Control,
        !!@ ili2db.dispName = "Catastro"
        Catastro,
        !!@ ili2db.dispName = "Otro"
        Otro
      );

      COL_RegistroTipo = (
        !!@ ili2db.dispName = "Rural"
        Rural,
        !!@ ili2db.dispName = "Urbano"
        Urbano,
        !!@ ili2db.dispName = "Otro"
        Otro
      );

      COL_VolumenTipo = (
        !!@ ili2db.dispName = "Oficial"
        Oficial,
        !!@ ili2db.dispName = "Calculado"
        Calculado,
        !!@ ili2db.dispName = "Otro"
        Otro
      );

      Integer = 0 .. 999999999;

      COL_EstadoDisponibilidadTipo = (
        !!@ ili2db.dispName = "Convertido"
        Convertido,
        !!@ ili2db.dispName = "Desconocido"
        Desconocido,
        !!@ ili2db.dispName = "Disponible"
        Disponible
      );

      COL_ISO19125_Tipo = (
        !!@ ili2db.dispName = "Disjunto"
        Disjunto,
        !!@ ili2db.dispName = "Toca"
        Toca,
        !!@ ili2db.dispName = "Superpone"
        Superpone,
        !!@ ili2db.dispName = "Desconocido"
        Desconocido
      );

      COL_RelacionSuperficieTipo = (
        !!@ ili2db.dispName = "En rasante"
        En_Rasante,
        !!@ ili2db.dispName = "En vuelo"
        En_Vuelo,
        !!@ ili2db.dispName = "En subsuelo"
        En_Subsuelo,
        !!@ ili2db.dispName = "Otro"
        Otro
      );

      COL_UnidadEdificacionTipo = (
        !!@ ili2db.dispName = "Compartido"
        Compartido,
        !!@ ili2db.dispName = "Individual"
        Individual
      );

      Currency = -2000000000.00 .. 2000000000.00;

      Real = 0.000 .. 999999999.999;
    STRUCTURE COL_FuncionInteresadoTipo_COL_Interesado_Tarea = value : MANDATORY COL_FuncionInteresadoTipo; END COL_FuncionInteresadoTipo_COL_Interesado_Tarea;

    /** Clase traducida CI_Contact de la ISO 19115.
     * Almacena la información requerida para permitir el contacto con la persona responsable y la organización.
     */
    STRUCTURE CI_Contacto =
      /** Números de teléfono en los que la organización o el individuo pueden ser contactados.
       */
      !!@ ili2db.dispName = "Teléfono"
      Telefono : CharacterString;
      /** Dirección física y de correo electrónico en la que se puede contactar a la organización o al individuo.
       */
      !!@ ili2db.dispName = "Dirección"
      Direccion : CharacterString;
      /** Información en línea que se puede usar para contactar al individuo o a la organización.
       */
      !!@ ili2db.dispName = "Fuente en línea"
      Fuente_En_Linea : CharacterString;
      /** Período de tiempo, incluida la zona horaria, en el que la organización o el individuo pueden ser contactados.
       */
      !!@ ili2db.dispName = "Horario de atención"
      Horario_De_Atencion : CharacterString;
      /** Instrucciones complementarias sobre cómo o cuándo contactar al individuo o a la organización.
       */
      !!@ ili2db.dispName = "Instrucciones de contacto"
      Instrucciones_Contacto : CharacterString;
    END CI_Contacto;

    STRUCTURE COL_AreaValor =
      !!@ ili2db.dispName = "Área"
      areaSize : MANDATORY 0.0 .. 99999999999999.9 [LADM_COL_V1_2.m2];
      !!@ ili2db.dispName = "Tipo"
      type : MANDATORY COL_AreaTipo;
    END COL_AreaValor;

    /** Referencia a una clase externa para gestionar direcciones.
     */
    STRUCTURE ExtDireccion =
      !!@ ili2db.dispName = "Tipo de dirección"
      Tipo_Direccion : MANDATORY (
        Estructurada,
        No_Estructurada
      );
      !!@ ili2db.dispName = "Es dirección principal"
      Es_Direccion_Principal : BOOLEAN;
      /** Par de valores georreferenciados (x,y) en la que se encuentra la dirección.
       */
      !!@ ili2db.dispName = "Localización"
      Localizacion : ISO19107_PLANAS_V1.GM_Point3D;
      !!@ ili2db.dispName = "Código postal"
      Codigo_Postal : CharacterString;
      !!@ ili2db.dispName = "Clase de vía principal"
      Clase_Via_Principal : (
        Avenida_Calle,
        Avenida_Carrera,
        Calle,
        Carrera,
        Diagonal,
        Transversal
      );
      !!@ ili2db.dispName = "Valor vía principal"
      Valor_Via_Principal : TEXT*100;
      !!@ ili2db.dispName = "Letra vía principal"
      Letra_Via_Principal : TEXT*20;
      !!@ ili2db.dispName = "Sector de la ciudad"
      Sector_Ciudad : (
        Norte,
        Sur,
        Este,
        Oeste
      );
      !!@ ili2db.dispName = "Valor de vía generadora"
      Valor_Via_Generadora : TEXT*100;
      !!@ ili2db.dispName = "Letra de vía generadora"
      Letra_Via_Generadora : TEXT*20;
      !!@ ili2db.dispName = "Número del predio"
      Numero_Predio : TEXT*20;
      !!@ ili2db.dispName = "Sector del predio"
      Sector_Predio : (
        Norte,
        Sur,
        Este,
        Oeste
      );
      !!@ ili2db.dispName = "Complemento"
      Complemento : TEXT*255;
      !!@ ili2db.dispName = "Nombre del predio"
      Nombre_Predio : TEXT*255;
      SET CONSTRAINT WHERE Tipo_Direccion == #No_Estructurada: 
        Nombre_Predio <> UNDEFINED;
    END ExtDireccion;

    /** Estructura para la definición de un tipo de dato personalizado que permite indicar una fracción o quebrado cona serie específica de condiciones.
     */
    STRUCTURE Fraccion =
      /** Parte inferior de la fracción. Debe ser mayor que 0. Debe ser mayor que el numerador.
       */
      !!@ ili2db.dispName = "Denominador"
      Denominador : MANDATORY Integer;
      /** Parte superior de la fracción. Debe ser mayor que 0. Debe sder menor que el denominador.
       */
      !!@ ili2db.dispName = "Numerador"
      Numerador : MANDATORY Integer;
      MANDATORY CONSTRAINT
        Denominador > 0;
      MANDATORY CONSTRAINT
        Numerador > 0;
      MANDATORY CONSTRAINT
        Denominador >= Numerador;
    END Fraccion;

    DOMAIN

      COL_FuenteAdministrativaTipo = (
        !!@ ili2db.dispName = "Escritura"
        Escritura,
        !!@ ili2db.dispName = "Certificado"
        Certificado,
        !!@ ili2db.dispName = "Contrato"
        Contrato,
        !!@ ili2db.dispName = "Documento de identidad"
        Documento_Identidad,
        !!@ ili2db.dispName = "Informe"
        Informe,
        !!@ ili2db.dispName = "Formulario predial"
        Formulario_Predial,
        !!@ ili2db.dispName = "Promesa de compraventa"
        Promesa_Compraventa,
        !!@ ili2db.dispName = "Reglamento"
        Reglamento,
        !!@ ili2db.dispName = "Resolución"
        Resolucion,
        !!@ ili2db.dispName = "Sentencia"
        Sentencia,
        !!@ ili2db.dispName = "Solicitud"
        Solicitud,
        !!@ ili2db.dispName = "Acta"
        Acta,
        !!@ ili2db.dispName = "Acuerdo"
        Acuerdo,
        !!@ ili2db.dispName = "Auto"
        Auto,
        !!@ ili2db.dispName = "Estatuto social"
        Estatuto_Social,
        !!@ ili2db.dispName = "Decreto"
        Decreto,
        !!@ ili2db.dispName = "Providencia"
        Providencia,
        !!@ ili2db.dispName = "Acta de colindancia"
        Acta_Colindancia,
        !!@ ili2db.dispName = "Libros antiguo sistema"
        Libros_Antiguo_Sistema_Registral,
        !!@ ili2db.dispName = "Informe de colindancia"
        Informe_Colindancia,
        !!@ ili2db.dispName = "Carta vental"
        Carta_Venta,
        !!@ ili2db.dispName = "Otro"
        Otro
      );

      COL_RedServiciosTipo = (
        !!@ ili2db.dispName = "Petróleo"
        Petroleo,
        !!@ ili2db.dispName = "Químicos"
        Quimicos,
        !!@ ili2db.dispName = "Red térmica"
        Red_Termica,
        !!@ ili2db.dispName = "Telecomunicación"
        Telecomunicacion
      );

      DQ_Metodo_Evaluacion_Codigo_Tipo = (
        !!@ ili2db.dispName = "Interno directo"
        Interno_Directo,
        !!@ ili2db.dispName = "Externo directo"
        Externo_Directo,
        !!@ ili2db.dispName = "Indirecto"
        Indirecto
      );

      Peso = 0.0 .. 999999999999999.0 [LADM_COL_V1_2.COP];

    /** Control externo de la unidad de edificación física.
     */
    STRUCTURE ExtUnidadEdificacionFisica =
      !!@ ili2db.dispName = "Ext dirección id"
      Ext_Direccion_ID : LADM_COL_V1_2.LADM_Nucleo.ExtDireccion;
    END ExtUnidadEdificacionFisica;

    /** Referencia a una imagen mediante su url.
     */
    STRUCTURE Imagen =
      /** url de la imagen.
       */
      !!@ ili2db.dispName = "uri"
      uri : CharacterString;
    END Imagen;

    DOMAIN

      /** Dominio que proviene de la traducción de CI_RoleCode de la norma ISO 19115:2003. Da los valores de dominio válidos para la función realizada por la parte responsable.
       */
      CI_CodigoTarea = (
        !!@ ili2db.dispName = "Proveedor de recursos"
        Proveedor_De_Recursos,
        !!@ ili2db.dispName = "Custodio"
        Custodio,
        !!@ ili2db.dispName = "Propietario"
        Propietario,
        !!@ ili2db.dispName = "Usuario"
        Usuario,
        !!@ ili2db.dispName = "Distribuidor"
        Distribuidor,
        !!@ ili2db.dispName = "Creador"
        Creador,
        !!@ ili2db.dispName = "Punto de contacto"
        Punto_De_Contacto,
        !!@ ili2db.dispName = "Investigador principal"
        Investigador_Principal,
        !!@ ili2db.dispName = "Procesador"
        Procesador,
        !!@ ili2db.dispName = "Editor"
        Editor,
        !!@ ili2db.dispName = "Autor"
        Autor
      );

      COL_MonumentacionTipo = (
        !!@ ili2db.dispName = "Incrustación"
        Incrustacion,
        !!@ ili2db.dispName = "Mojón"
        Mojon,
        !!@ ili2db.dispName = "No materializado"
        No_Materializado,
        !!@ ili2db.dispName = "Otros"
        Otros,
        !!@ ili2db.dispName = "Pilastra"
        Pilastra
      );

    /** Clase traducida a partir de DQ_Element de la norma ISO 19157.
     * Contiene los aspectos de la información de calidad cuantitativa. REVISAR MODELADO
     */
    STRUCTURE DQ_Element =
      /** Nombre de la prueba aplicada a los datos. Proviene de la agregación de la clase DQ_MeasureReference a DQ_Element.
       */
      !!@ ili2db.dispName = "Nombre de la medida"
      Nombre_Medida : CharacterString;
      /** Identificador de la medida, valor que identifica de manera única la medida dentro de un espacio de nombres. Proviene de la agregación de la clase DQ_MeasureReference a DQ_Element.
       */
      !!@ ili2db.dispName = "Identificación de la medida"
      Identificacion_Medida : CharacterString;
      /** Descripción. Proviene de la agregación de la clase DQ_MeasureReference a DQ_Element.
       */
      !!@ ili2db.dispName = "Descripción de la medida"
      Descripcion_Medida : CharacterString;
      /** Método utilizado para evaluar la calidad de los datos. Proviene de la agregación de la clase DQ_EvaluationMethod a DQ_Element.
       */
      !!@ ili2db.dispName = "Método de evaluación"
      Metodo_Evaluacion : DQ_Metodo_Evaluacion_Codigo_Tipo;
      /** Descripción del método de evaluación. Proviene de la agregación de la clase DQ_EvaluationMethod a DQ_Element.
       */
      !!@ ili2db.dispName = "Descripción métodod de evaluación"
      Descripcion_Metodo_Evaluacion : CharacterString;
      /** Referencia a la información del procedimiento. Proviene de la agregación de la clase DQ_MeasureReference a DQ_Element.
       */
      !!@ ili2db.dispName = "Procedimiento de evaluación"
      Procedimiento_Evaluacion : CharacterString;
      /** Fecha y hora en la que se generan los resultados. Proviene de la agregación de la clase DQ_Result a DQ_Element.
       */
      !!@ ili2db.dispName = "Fecha hora"
      Fecha_Hora : INTERLIS.XMLDateTime;
      /** Alcance del resultado de la prueba de calidad. Proviene de la agregación de la clase DQ_Result a DQ_Element.
       */
      !!@ ili2db.dispName = "Resultado"
      Resultado : CharacterString;
    END DQ_Element;

    /** Referencia a una clase externa para gestionar direcciones.
     */
    STRUCTURE ExtInteresado =
      /** Identificador externo del interesado.
       */
      !!@ ili2db.dispName = "Ext dirección id"
      Ext_Direccion_ID : LADM_COL_V1_2.LADM_Nucleo.ExtDireccion;
      !!@ ili2db.dispName = "Huella dactilar"
      Huella_Dactilar : LADM_COL_V1_2.LADM_Nucleo.Imagen;
      !!@ ili2db.dispName = "Nombre"
      Nombre : CharacterString;
      !!@ ili2db.dispName = "Fotografía"
      Fotografia : LADM_COL_V1_2.LADM_Nucleo.Imagen;
      !!@ ili2db.dispName = "Firma"
      Firma : LADM_COL_V1_2.LADM_Nucleo.Imagen;
    END ExtInteresado;

    DOMAIN

      /** Traducción del dominio CI_PresentationFormCode de la norma ISO 19115:2003. Indica el modo en el que se representan los datos.
       */
      CI_Forma_Presentacion_Codigo = (
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Imagen"
        Imagen,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Mapa"
        Mapa,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Modelo"
        Modelo,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Perfil"
        Perfil,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Tabla"
        Tabla,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Video"
        Video,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Audio"
        Audio,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Diagrama"
        Diagrama,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Multimedia"
        Multimedia,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Muestra física"
        Muestra_Fisica,
        /** Definición en la ISO 19115:2003.
         */
        !!@ ili2db.dispName = "Otro"
        Otro
      );

    /** Clase traducida CI_ResponsibleParty de la ISO 19115:2003. Identificación de los responsables del recurso y el papel de la parte en el recurso.
     */
    STRUCTURE CI_ParteResponsable =
      /** Nombre individual del responsable. Se proporciona si la organización o la posición no son proporcionados.
       */
      !!@ ili2db.dispName = "Nombre individual"
      Nombre_Individual : CharacterString;
      /** Nombre de la organización responsable. Se proporciona si el nombre individual o la posición no se provén.
       */
      !!@ ili2db.dispName = "Nombre de la organización"
      Nombre_Organizacion : CharacterString;
      /** Posición de la persona responsable. Se proporcionará si NombreIndividual o Organizacion no son
       * proporcionados.
       */
      !!@ ili2db.dispName = "Posición"
      Posicion : CharacterString;
      /** Ver clase CI_Contacto.
       */
      !!@ ili2db.dispName = "Información de contacto"
      Informacion_Contacto : LADM_COL_V1_2.LADM_Nucleo.CI_Contacto;
      /** Función realizada por la parte responsable.
       */
      !!@ ili2db.dispName = "Función"
      Funcion : CI_CodigoTarea;
    END CI_ParteResponsable;

    /** Referencia a una clase externa para gestionar las redes físicas de servicios.
     */
    STRUCTURE ExtRedServiciosFisica =
      /** Indica si la red de servicios tiene un gradiente o no.
       */
      !!@ ili2db.dispName = "Orientada"
      Orientada : BOOLEAN;
      /** Identificador de referencia a un interesado externo que es el administrador.
       */
      !!@ ili2db.dispName = "Ext interesado administrador id"
      Ext_Interesado_Administrador_ID : LADM_COL_V1_2.LADM_Nucleo.ExtInteresado;
    END ExtRedServiciosFisica;

    /** Estructura que proviene de la traducción de la clase CC_OperationMethod de la ISO 19111. Indica el método utilizado, mediante un algoritmo o un procedimiento, para realizar operaciones con coordenadas.
     */
    STRUCTURE CC_MetodoOperacion =
      /** Fórmulas o procedimientos utilizadoa por este método de operación de coordenadas. Esto puede ser una referencia a una publicación. Tenga en cuenta que el método de operación puede no ser analítico, en cuyo caso este atributo hace referencia o contiene el procedimiento, no una fórmula analítica.
       */
      !!@ ili2db.dispName = "Fórmula"
      Formula : MANDATORY CharacterString;
      /** Número de dimensiones en la fuente CRS de este método de operación de coordenadas.
       */
      !!@ ili2db.dispName = "Dimensiones origen"
      Dimensiones_Origen : Integer;
      /** Número de dimensiones en el CRS de destino de este método de operación de coordenadas.
       */
      !!@ ili2db.dispName = "Ddimensiones objetivo"
      Ddimensiones_Objetivo : Integer;
    END CC_MetodoOperacion;

    /** Referencia a clase externa desde donde se gestiona el repositorio de archivos.
     */
    STRUCTURE ExtArchivo =
      /** Fecha en la que ha sido aceptado el documento.
       */
      !!@ ili2db.dispName = "Fecha de aceptación"
      Fecha_Aceptacion : INTERLIS.XMLDate;
      /** Datos que contiene el documento.
       */
      !!@ ili2db.dispName = "Datos"
      Datos : CharacterString;
      /** Última fecha de extracción del documento.
       */
      !!@ ili2db.dispName = "Extracción"
      Extraccion : INTERLIS.XMLDate;
      /** Fecha en la que el documento es aceptado en el sistema.
       */
      !!@ ili2db.dispName = "Fecha de grabación"
      Fecha_Grabacion : INTERLIS.XMLDate;
      /** Fecha en la que fue entregado el documento.
       */
      !!@ ili2db.dispName = "Fecha de entrega"
      Fecha_Entrega : INTERLIS.XMLDate;
      /** Definición del identificador único global del documento.
       */
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      /** Identificador local del documento.
       */
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
    END ExtArchivo;

    /** Clase abstracta que permite gestionar el histórico del conjunto de clases, las cuales heredan de esta, excepto las fuentes.
     */
    CLASS ObjetoVersionado (ABSTRACT) =
      /** Comienzo de la validez actual de la instancia de un objeto.
       */
      !!@ ili2db.dispName = "Versión de comienzo de vida útil"
      Comienzo_Vida_Util_Version : MANDATORY INTERLIS.XMLDateTime;
      /** Finnzo de la validez actual de la instancia de un objeto.
       */
      !!@ ili2db.dispName = "Versión de fin de vida útil"
      Fin_Vida_Util_Version : INTERLIS.XMLDateTime;
      /** Metadatos relativos a la calidad de la instancia.
       */
      !!@ ili2db.dispName = "Calidad"
      Calidad : LIST {0..*} OF LADM_COL_V1_2.LADM_Nucleo.DQ_Element;
      /** Metadatos corresondientes a la responsabilidad de la instancia.
       */
      !!@ ili2db.dispName = "Procedencia"
      Procedencia : LIST {0..*} OF LADM_COL_V1_2.LADM_Nucleo.CI_ParteResponsable;
      MANDATORY CONSTRAINT
        Fin_Vida_Util_Version >= Comienzo_Vida_Util_Version;
    END ObjetoVersionado;

    /** Clase abstracta. Esta clase es la personalización en el modelo del perfil colombiano de la clase de LADM LA_Source.
     */
    CLASS COL_Fuente (ABSTRACT) =
      /** Indica si la fuente está o no disponible y en qué condiciones. También puede indicar porqué ha dejado de estar disponible, si ha ocurrido.
       */
      !!@ ili2db.dispName = "Estado de disponibilidad"
      Estado_Disponibilidad : MANDATORY COL_EstadoDisponibilidadTipo;
      /** Identificador del archivo fuente controlado por una clase externa.
       */
      !!@ ili2db.dispName = "Ext archivo id"
      Ext_Archivo_ID : LADM_COL_V1_2.LADM_Nucleo.ExtArchivo;
      /** Tipo de formato en el que es presentada la fuente, de acuerdo con el registro de metadatos.
       */
      !!@ ili2db.dispName = "Tipo principal"
      Tipo_Principal : CI_Forma_Presentacion_Codigo;
      /** Descripción de la calidad del documento de acuerdo a los metadatos del objeto DQ_Element, clase de la norma ISO 19157 que se refiere a aspectos de la información de calidad cuantitativa de la instancia referenciada.
       */
      !!@ ili2db.dispName = "Calidad"
      Calidad : LIST {0..*} OF LADM_COL_V1_2.LADM_Nucleo.DQ_Element;
      /** Parte responsable de la aceptación, con todos los metadatos gestionados por la clase CI_ParteResponsable, que hace referencia a la norma ISO 19115:2003.
       */
      !!@ ili2db.dispName = "Procedencia"
      Procedencia : LIST {0..*} OF LADM_COL_V1_2.LADM_Nucleo.CI_ParteResponsable;
      /** Identificación inéquivoca de la fuente en el sistema.
       */
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      /** Identificador de la fuente en el sistema local.
       */
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
      /** Indica si se trata de un documento oficial o no.
       */
      !!@ ili2db.dispName = "Oficialidad"
      Oficialidad : BOOLEAN;
      !!@ ili2db.dispName = "Fecha de documento fuente"
      Fecha_Documento_Fuente : INTERLIS.XMLDate;
    END COL_Fuente;

    /** Registro de la fórmula o procedimiento utilizado en la transformación y de su resultado.
     */
    STRUCTURE COL_Transformacion =
      /** Fórmula o procedimiento utilizado en la transformación.
       */
      !!@ ili2db.dispName = "Transformación"
      Transformacion : MANDATORY LADM_COL_V1_2.LADM_Nucleo.CC_MetodoOperacion;
      /** Geometría una vez realizado el proceso de transformación.
       */
      !!@ ili2db.dispName = "Localización transformada"
      Localizacion_Transformada : MANDATORY ISO19107_PLANAS_V1.GM_Point3D;
    END COL_Transformacion;

    /** Estructura para la definición de un tipo de dato personalizado que permite indicar la medición de un volumen y la naturaleza de este.
     */
    STRUCTURE COL_VolumenValor =
      /** Medición del volumen en m3.
       */
      !!@ ili2db.dispName = "Volumen medición"
      Volumen_Medicion : MANDATORY 0.0 .. 99999999999999.9 [INTERLIS.m];
      /** Indicación de si el volumen es calculado, si figura como oficial o si se da otra circunstancia.
       */
      !!@ ili2db.dispName = "Tipo"
      Tipo : MANDATORY COL_VolumenTipo;
    END COL_VolumenValor;

    /** Estructura que pone a disposición del modelo la clase OM_Observation de la ISO 19156 y de la que sólo implementa un atributo de los cinco que tiene la clase origina: resultQuality.
     */
    STRUCTURE OM_Observacion =
      /** Resultado del proceso de calidad, conforme a DQ_Element.
       */
      !!@ ili2db.dispName = "Resultado calidad"
      Resultado_Calidad : LADM_COL_V1_2.LADM_Nucleo.DQ_Element;
    END OM_Observacion;

    /** Especialización de la clase COL_Fuente para almacenar aquellas fuentes constituidas por documentos (documento hipotecario, documentos notariales, documentos históricos, etc.) que documentan la relación entre instancias de interesados y de predios.
     */
    CLASS COL_FuenteAdministrativa (ABSTRACT)
    EXTENDS COL_Fuente =
      /** Descripción del documento.
       */
      !!@ ili2db.dispName = "Observación"
      Observacion : CharacterString;
      /** Tipo de documento de fuente administrativa.
       */
      !!@ ili2db.dispName = "Tipo"
      Tipo : MANDATORY COL_FuenteAdministrativaTipo;
      /** Identificador del documento, ejemplo: numero de la resolución
       */
      !!@ ili2db.dispName = "Número de fuente"
      Numero_Fuente : TEXT*150;
    END COL_FuenteAdministrativa;

    /** Traducción al español de la clase LA_SpatialUnit de LADM.
     */
    CLASS COL_UnidadEspacial (ABSTRACT)
    EXTENDS ObjetoVersionado =
      !!@ ili2db.dispName = "Área"
      Area : LIST {0..*} OF LADM_COL_V1_2.LADM_Nucleo.COL_AreaValor;
      !!@ ili2db.dispName = "Dimensión"
      Dimension : COL_DimensionTipo;
      /** Corresponde al atributo extAddressID de la clase en LADM.
       */
      !!@ ili2db.dispName = "Ext dirección id"
      Ext_Direccion_ID : LIST {0..*} OF LADM_COL_V1_2.LADM_Nucleo.ExtDireccion;
      /** Corresponde al atributo label de la clase en LADM.
       */
      !!@ ili2db.dispName = "Etiqueta"
      Etiqueta : CharacterString;
      /** Corresponde al atributo surfaceRelation de la clase en LADM.
       */
      !!@ ili2db.dispName = "Relación superficie"
      Relacion_Superficie : COL_RelacionSuperficieTipo;
      /** Corresponde al atributo volume de la clase en LADM.
       */
      !!@ ili2db.dispName = "Volumen"
      Volumen : LIST {0..*} OF LADM_COL_V1_2.LADM_Nucleo.COL_VolumenValor;
      /** Identificador único global. Corresponde al atributo suID de la clase en LADM.
       */
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      /** Identificador único local.
       */
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
      /** Materializacion del metodo createArea(). Almacena de forma permanente la geometría de tipo poligonal.
       */
      !!@ ili2db.dispName = "Geometría"
      Geometria : ISO19107_PLANAS_V1.GM_MultiSurface3D;
    END COL_UnidadEspacial;

    /** Agrupa unidades espaciales, es decir, representaciones geográficas de las unidades administrativas básicas (clase LA_BAUnit) para representar otras unidades espaciales que se forman en base a estas, como puede ser el caso de los polígonos catastrales.
     */
    CLASS COL_AgrupacionUnidadesEspaciales (ABSTRACT)
    EXTENDS ObjetoVersionado =
      /** Nivel jerárquico de la agrupación, dentro del anidamiento de diferentes agrupaciones.
       */
      !!@ ili2db.dispName = "Nivel jerárquico"
      Nivel_Jerarquico : MANDATORY Integer;
      /** Definición de la agrupación.
       */
      !!@ ili2db.dispName = "Etiqueta"
      Etiqueta : CharacterString;
      /** Nombre que recibe la agrupación.
       */
      !!@ ili2db.dispName = "Nombre"
      Nombre : CharacterString;
      /** Punto de referencia de toda la agrupación, a modo de centro de masas.
       */
      !!@ ili2db.dispName = "Punto de referencia"
      Punto_Referencia : ISO19107_PLANAS_V1.GM_Point3D;
      /** Identificar único global de la agrupación.
       */
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      /** Identificador único local de la agrupación.
       */
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
    END COL_AgrupacionUnidadesEspaciales;

    /** Traducción al español de la clase LA_LegalSpaceBuildingUnit. Sus intancias son las unidades de edificación
     */
    CLASS COL_EspacioJuridicoUnidadEdificacion (ABSTRACT)
    EXTENDS COL_UnidadEspacial =
      /** Identificador de la unidad de edificación.
       */
      !!@ ili2db.dispName = "Ext unidad edificación física id"
      Ext_Unidad_Edificacion_Fisica_ID : LADM_COL_V1_2.LADM_Nucleo.ExtUnidadEdificacionFisica;
      /** Tipo de unidad de edificación de la que se trata.
       */
      !!@ ili2db.dispName = "Tipo"
      Tipo : COL_UnidadEdificacionTipo;
    END COL_EspacioJuridicoUnidadEdificacion;

    ASSOCIATION col_ueJerarquiaGrupo =
      agrupacion -<> {0..1} COL_AgrupacionUnidadesEspaciales;
      elemento -- {0..*} COL_AgrupacionUnidadesEspaciales;
    END col_ueJerarquiaGrupo;

    /** Traducción al español de la clase LA_LegalSpaceUtilityNetwork. Representa un tipo de unidad espacial (LA_UNidadEspacial) cuyas instancias son las redes de servicios.
     */
    CLASS COL_EspacioJuridicoRedServicios (ABSTRACT)
    EXTENDS COL_UnidadEspacial =
      /** Identificador de la red física hacia una referencia externa.
       */
      !!@ ili2db.dispName = "Ext id red física"
      ext_ID_Red_Fisica : LADM_COL_V1_2.LADM_Nucleo.ExtRedServiciosFisica;
      /** Estado de operatividad de la red.
       */
      !!@ ili2db.dispName = "Estado"
      Estado : COL_EstadoRedServiciosTipo;
      /** Tipo de servicio que presta.
       */
      !!@ ili2db.dispName = "Tipo"
      Tipo : COL_RedServiciosTipo;
    END COL_EspacioJuridicoRedServicios;

    ASSOCIATION col_ueUeGrupo =
      parte -- {0..*} COL_UnidadEspacial;
      todo -- {0..*} COL_AgrupacionUnidadesEspaciales;
    END col_ueUeGrupo;

    /** Traducción de la clase LA_Level de LADM.
     */
    CLASS COL_Nivel (ABSTRACT)
    EXTENDS ObjetoVersionado =
      !!@ ili2db.dispName = "Nombre"
      Nombre : CharacterString;
      !!@ ili2db.dispName = "Tipo de registro"
      Registro_Tipo : COL_RegistroTipo;
      !!@ ili2db.dispName = "Estructura"
      Estructura : COL_EstructuraTipo;
      !!@ ili2db.dispName = "Tipo"
      Tipo : COL_ContenidoNivelTipo;
    END COL_Nivel;

    /** Traducción al español de la clase LA_RequiredRelationshipSpatialUnit de LADM.
     */
    CLASS COL_RelacionNecesariaUnidadesEspaciales (ABSTRACT)
    EXTENDS ObjetoVersionado =
      !!@ ili2db.dispName = "Relación"
      Relacion : MANDATORY COL_ISO19125_Tipo;
    END COL_RelacionNecesariaUnidadesEspaciales;

    ASSOCIATION col_ueNivel =
      ue -- {0..*} COL_UnidadEspacial;
      nivel -- {0..1} COL_Nivel;
    END col_ueNivel;

    /** Clase abstracta que agrupa los atributos comunes de las clases para los derechos (rights), las responsabilidades (responsabilities) y las restricciones (restrictions).
     */
    CLASS COL_RRR (ABSTRACT)
    EXTENDS ObjetoVersionado =
      /** Descripción relatical al derecho, la responsabilidad o la restricción.
       */
      !!@ ili2db.dispName = "Descripción"
      Descripcion : CharacterString;
      /** Participación, en modo de fracción, en la subclase LA_Derecho, LA_Responsabilidad o LA_Restriccion.
       */
      !!@ ili2db.dispName = "Compartido"
      Compartido : LADM_COL_V1_2.LADM_Nucleo.Fraccion;
      /** Indicación de si se activa el constraint (a+b+...+n=100%) de la fracción Compartido.
       */
      !!@ ili2db.dispName = "Comprobación si comparte"
      Comprobacion_Comparte : BOOLEAN;
      /** Descripción de cual es el uso efectivo.
       */
      !!@ ili2db.dispName = "Uso efectivo"
      Uso_Efectivo : CharacterString;
      /** Identificador global único.
       */
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      /** Identificador único local.
       */
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
    END COL_RRR;

    /** De forma genérica, representa el objeto territorial legal (Catastro 2014) que se gestiona en el modelo, en este caso, la parcela catastral o predio. Es independiente del conocimiento de su realidad espacial y se centra en su existencia conocida y reconocida.
     */
    CLASS COL_BAUnit (ABSTRACT)
    EXTENDS ObjetoVersionado =
      /** Nombre que recibe la unidad administrativa básica, en muchos casos toponímico, especialmente en terrenos rústicos.
       */
      !!@ ili2db.dispName = "Nombre"
      Nombre : CharacterString;
      /** Tipo de derecho que la reconoce.
       */
      !!@ ili2db.dispName = "Tipo"
      Tipo : MANDATORY COL_BAUnitTipo;
      /** Identificador único global.
       */
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      /** Identificador único local.
       */
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
    END COL_BAUnit;

    ASSOCIATION col_rrrFuente =
      fuente_administrativa -- {1..*} COL_FuenteAdministrativa;
      rrr -- {0..*} COL_RRR;
    END col_rrrFuente;

    /** Traducción de la clase LA_RequiredRelationshipBAUnit de LADM.
     */
    CLASS COL_RelacionNecesariaBAUnits (ABSTRACT)
    EXTENDS ObjetoVersionado =
      !!@ ili2db.dispName = "Relación"
      Relacion : MANDATORY CharacterString;
    END COL_RelacionNecesariaBAUnits;

    ASSOCIATION col_baunitRrr =
      unidad -- {1} COL_BAUnit;
      rrr -- {1..*} COL_RRR;
    END col_baunitRrr;

    ASSOCIATION col_ueBaunit =
      ue (EXTERNAL) -- {0..*} COL_UnidadEspacial;
      baunit -- {0..*} COL_BAUnit;
    END col_ueBaunit;

    ASSOCIATION col_relacionFuente =
      fuente_administrativa -- {0..*} COL_FuenteAdministrativa;
      relacionrequeridaBaunit -- {0..*} COL_RelacionNecesariaBAUnits;
    END col_relacionFuente;

    ASSOCIATION col_unidadFuente =
      fuente_administrativa -- {0..*} COL_FuenteAdministrativa;
      unidad -- {0..*} COL_BAUnit;
    END col_unidadFuente;

    /** Traducción al español de la clase LA_Point de LADM.
     */
    CLASS COL_Punto (ABSTRACT)
    EXTENDS ObjetoVersionado =
      !!@ ili2db.dispName = "Posición interpolación"
      Posicion_Interpolacion : COL_InterpolacionTipo;
      !!@ ili2db.dispName = "Monumentación"
      Monumentacion : COL_MonumentacionTipo;
      !!@ ili2db.dispName = "Geometría"
      Geometria : MANDATORY ISO19107_PLANAS_V1.GM_Point3D;
      !!@ ili2db.dispName = "Tipo de punto"
      PuntoTipo : MANDATORY COL_PuntoTipo;
      !!@ ili2db.dispName = "Método de producción"
      MetodoProduccion : COL_MetodoProduccionTipo;
      !!@ ili2db.dispName = "Transformación y resultado"
      Transformacion_Y_Resultado : LIST {0..*} OF LADM_COL_V1_2.LADM_Nucleo.COL_Transformacion;
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
    END COL_Punto;

    /** Especialización de la clase COL_Fuente para almacenar las fuentes constituidas por datos espaciales (entidades geográficas, imágenes de satélite, vuelos fotogramétricos, listados de coordenadas, mapas, planos antiguos o modernos, descripción de localizaciones, etc.) que documentan técnicamente la relación entre instancias de interesados y de predios
     */
    CLASS COL_FuenteEspacial (ABSTRACT)
    EXTENDS COL_Fuente =
      !!@ ili2db.dispName = "Mediciones"
      Mediciones : LIST {0..*} OF LADM_COL_V1_2.LADM_Nucleo.OM_Observacion;
      !!@ ili2db.dispName = "Tipo"
      Tipo : MANDATORY COL_FuenteEspacialTipo;
    END COL_FuenteEspacial;

    /** Traducción al español de la clase LA_BoundaryFaceString de LADM. Define los linderos y a su vez puede estar definida por una descrición textual o por dos o más puntos. Puede estar asociada a una fuente espacial o más.
     */
    CLASS COL_CadenaCarasLimite (ABSTRACT)
    EXTENDS ObjetoVersionado =
      /** Geometría lineal que define el lindero. Puede estar asociada a geometrías de tipo punto que definen sus vértices o ser una entidad lineal independiente.
       */
      !!@ ili2db.dispName = "Geometría"
      Geometria : ISO19107_PLANAS_V1.GM_Curve3D;
      /** Descripción de la localización, cuando esta se basa en texto.
       */
      !!@ ili2db.dispName = "Localización textual"
      Localizacion_Textual : CharacterString;
      /** Identificador único global de la cadena de caras lindero.
       */
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      /** Identificador local de la cadena de caras lindero.
       */
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
    END COL_CadenaCarasLimite;

    /** Traducción de la clase LA_BoundaryFace de LADM. De forma similar a LA_CadenaCarasLindero, representa los límites, pero en este caso permite representación 3D.
     */
    CLASS COL_CarasLindero (ABSTRACT)
    EXTENDS ObjetoVersionado =
      /** Geometría en 3D del límite o lindero, asociada a putos o a descripciones textuales.
       */
      !!@ ili2db.dispName = "Geometría"
      Geometria : ISO19107_PLANAS_V1.GM_MultiSurface3D;
      /** Cuando la localización del límte está dada por una descripción textual, aquí se recoge esta.
       */
      !!@ ili2db.dispName = "Localización textual"
      Localizacion_Textual : CharacterString;
      /** Identificador único global.
       */
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      /** Identificador único local.
       */
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
    END COL_CarasLindero;

    ASSOCIATION col_puntoReferencia =
      ue (EXTERNAL) -- {0..1} COL_UnidadEspacial;
      punto -- {0..1} COL_Punto;
    END col_puntoReferencia;

    ASSOCIATION col_puntoFuente =
      fuente_espacial -- {0..*} COL_FuenteEspacial;
      punto -- {0..*} COL_Punto;
    END col_puntoFuente;

    ASSOCIATION col_ueFuente =
      ue (EXTERNAL) -- {0..*} COL_UnidadEspacial;
      fuente_espacial -- {0..*} COL_FuenteEspacial;
    END col_ueFuente;

    ASSOCIATION col_baunitFuente =
      fuente_espacial -- {0..*} COL_FuenteEspacial;
      unidad (EXTERNAL) -- {0..*} COL_BAUnit;
    END col_baunitFuente;

    ASSOCIATION col_relacionFuenteUespacial =
      fuente_espacial -- {0..*} COL_FuenteEspacial;
      relacionrequeridaUe (EXTERNAL) -- {0..*} COL_RelacionNecesariaUnidadesEspaciales;
    END col_relacionFuenteUespacial;

    ASSOCIATION col_cclFuente =
      ccl -- {0..*} COL_CadenaCarasLimite;
      fuente_espacial -- {0..*} COL_FuenteEspacial;
    END col_cclFuente;

    ASSOCIATION col_menosCcl =
      ccl_menos -- {0..*} COL_CadenaCarasLimite;
      ue_menos (EXTERNAL) -- {0..*} COL_UnidadEspacial;
    END col_menosCcl;

    ASSOCIATION col_masCcl =
      ccl_mas -- {0..*} COL_CadenaCarasLimite;
      ue_mas (EXTERNAL) -- {0..*} COL_UnidadEspacial;
    END col_masCcl;

    ASSOCIATION col_puntoCcl =
      punto -- {2..*} COL_Punto;
      ccl -- {0..*} COL_CadenaCarasLimite;
    END col_puntoCcl;

    ASSOCIATION col_clFuente =
      cl -- {0..*} COL_CarasLindero;
      fuente_espacial -- {0..*} COL_FuenteEspacial;
    END col_clFuente;

    ASSOCIATION col_menosCl =
      cl_menos -- {0..*} COL_CarasLindero;
      ue_menos (EXTERNAL) -- {0..*} COL_UnidadEspacial;
    END col_menosCl;

    ASSOCIATION col_masCl =
      cl_mas -- {0..*} COL_CarasLindero;
      ue_mas (EXTERNAL) -- {0..*} COL_UnidadEspacial;
    END col_masCl;

    ASSOCIATION col_puntoCl =
      punto -- {3..*} COL_Punto;
      cl -- {0..*} COL_CarasLindero;
    END col_puntoCl;

    /** Traducción de la clase LA_Party de LADM. Representa a las personas que ejercen derechos y responsabilidades  o sufren restricciones respecto a una BAUnit.
     */
    CLASS COL_Interesado (ABSTRACT)
    EXTENDS ObjetoVersionado =
      /** Identificador del interesado.
       */
      !!@ ili2db.dispName = "Ext PID"
      ext_PID : LADM_COL_V1_2.LADM_Nucleo.ExtInteresado;
      /** Nombre del interesado.
       */
      !!@ ili2db.dispName = "Nombre"
      Nombre : CharacterString;
      /** Función o tarea que realiza el interesado dentro del marco de derechos, obligaciones y restricciones.
       */
      !!@ ili2db.dispName = "Tarea"
      Tarea : LIST {0..*} OF COL_FuncionInteresadoTipo_COL_Interesado_Tarea;
      /** Identificador único global.
       */
      !!@ ili2db.dispName = "Espacio de nombres"
      Espacio_De_Nombres : MANDATORY CharacterString;
      /** Identificador único local.
       */
      !!@ ili2db.dispName = "Local id"
      Local_Id : MANDATORY CharacterString;
    END COL_Interesado;

    /** Registra interesados que representan a grupos de personas. Se registra el grupo en si, independientemete de las personas por separado. Es lo que ocurreo, por ejemplo, con un grupo étnico.
     */
    CLASS COL_Agrupacion_Interesados (ABSTRACT)
    EXTENDS COL_Interesado =
      /** Indica el tipo de agrupación del que se trata.
       */
      !!@ ili2db.dispName = "Tipo"
      Tipo : MANDATORY COL_GrupoInteresadoTipo;
    END COL_Agrupacion_Interesados;

    ASSOCIATION col_baunitComoInteresado =
      interesado -- {0..*} COL_Interesado;
      unidad (EXTERNAL) -- {0..*} COL_BAUnit;
    END col_baunitComoInteresado;

    ASSOCIATION col_responsableFuente =
      fuente_administrativa (EXTERNAL) -- {0..*} COL_FuenteAdministrativa;
      interesado -- {0..*} COL_Interesado;
    END col_responsableFuente;

    ASSOCIATION col_rrrInteresado =
      rrr (EXTERNAL) -- {0..*} COL_RRR;
      interesado -- {0..1} COL_Interesado;
    END col_rrrInteresado;

    ASSOCIATION col_topografoFuente =
      fuente_espacial (EXTERNAL) -- {0..*} COL_FuenteEspacial;
      topografo -- {0..*} COL_Interesado;
    END col_topografoFuente;

    ASSOCIATION col_miembros =
      interesado -- {2..*} COL_Interesado;
      agrupacion -<> {0..*} COL_Agrupacion_Interesados;
      participacion : LADM_COL_V1_2.LADM_Nucleo.Fraccion;
    END col_miembros;

  END LADM_Nucleo;

END LADM_COL_V1_2.
